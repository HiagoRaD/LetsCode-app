{"ast":null,"code":"var _jsxFileName = \"/Users/hiagodiniz/Desktop/LetsCode/desafio-tecnico-frontend/FRONT/my-app/src/components/kanban-card/kanban-card.tsx\";\nimport { faArrowLeft, faArrowRight, faBan, faCheck, faPen, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { clone, cloneDeep, get } from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { updatePutStatus } from '../../reducers/reducer';\nimport { deleteCard, putCard } from '../../store/store';\nimport { HttpRequestStatus, ListType } from '../../utils/enums';\nimport { TextInput } from '../inputs/text-input/text-input';\nimport { TextareaInput } from '../inputs/textarea-input/textarea-input';\nimport PreLoader from '../pre-loader/pre-loader';\nimport './kanban-card.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar CardMode;\n\n(function (CardMode) {\n  CardMode[\"VIEW\"] = \"VIEW\";\n  CardMode[\"EDIT\"] = \"EDIT\";\n})(CardMode || (CardMode = {}));\n\nclass KanbanCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderCardView = () => {\n      const {\n        card\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'card-header',\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: 'card-title',\n            children: card.titulo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'icons-container',\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: 'card-icon-op delete',\n              icon: faTrash,\n              onClick: () => this.handleDeletePressed()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: 'card-icon-op edit',\n              onClick: () => this.handleEditPressed(),\n              icon: faPen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'card-body',\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'text-container',\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: card.conteudo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'arrow-buttons-container',\n          children: [card.lista !== ListType.TO_DO && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: 'card-icon-op arrow left',\n            icon: faArrowLeft\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 47\n          }, this), card.lista !== ListType.DONE && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: 'card-icon-op arrow right',\n            icon: faArrowRight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.handleDeletePressed = () => {\n      const entity = clone(this.props.card);\n      deleteCard(entity.id);\n    };\n\n    this.handleEditPressed = () => {\n      const cardElement = document.getElementById(this.props.card.id);\n      this.setState({\n        mode: CardMode.EDIT,\n        temporaryCard: cloneDeep(this.props.card),\n        cardHeight: get(cardElement, 'clientHeight')\n      });\n    };\n\n    this.renderCardEdit = () => {\n      const {\n        temporaryCard\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'card-header',\n          children: [/*#__PURE__*/_jsxDEV(TextInput, {\n            value: temporaryCard.titulo,\n            onChange: event => this.setTemporaryCardValue(event.target.value, 'titulo')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'icons-container',\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: 'card-icon cancel',\n              onClick: () => this.cancelEdit(),\n              icon: faBan\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: 'card-icon confirm',\n              onClick: () => this.confirmEdit(),\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'card-body',\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'text-container',\n            children: /*#__PURE__*/_jsxDEV(TextareaInput, {\n              value: temporaryCard.conteudo,\n              onChange: event => this.setTemporaryCardValue(event.target.value, 'conteudo')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.setTemporaryCardValue = (value, key) => {\n      this.setState(prevState => ({\n        temporaryCard: { ...prevState.temporaryCard,\n          [key]: value\n        }\n      }));\n    };\n\n    this.cancelEdit = () => {\n      this.setState({\n        mode: CardMode.VIEW,\n        cardHeight: undefined\n      });\n    };\n\n    this.confirmEdit = () => {\n      const entity = this.state.temporaryCard;\n      putCard(entity);\n    };\n\n    this.renderPreLoader = () => /*#__PURE__*/_jsxDEV(PreLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 27\n    }, this);\n\n    this.state = {\n      temporaryCard: this.props.card,\n      mode: CardMode.VIEW\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    const uuid = this.props.card.id;\n\n    if (get(newProps, `putResponse.${this.props.card.id}`) === HttpRequestStatus.SUCCESS) {\n      this.setState({\n        mode: CardMode.VIEW\n      }, () => this.props.updatePutStatus(HttpRequestStatus.NOOP, uuid));\n    }\n  }\n\n  render() {\n    const {\n      card,\n      deleteResponse,\n      putResponse\n    } = this.props;\n    const {\n      mode,\n      cardHeight\n    } = this.state;\n    const renderController = {\n      VIEW: () => this.renderCardView(),\n      EDIT: () => this.renderCardEdit()\n    };\n    const deleteStatus = get(deleteResponse, `${card.id}`, HttpRequestStatus.NOOP);\n    const putStatus = get(putResponse, `${card.id}`, HttpRequestStatus.NOOP);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: card.id,\n      className: `kanban-card-container ${card.lista} ${mode}`,\n      style: cardHeight ? {\n        height: `${cardHeight - 25}px`\n      } : {},\n      children: deleteStatus === HttpRequestStatus.ONGOING || putStatus === HttpRequestStatus.ONGOING ? this.renderPreLoader() : renderController[mode]()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = storeState => ({\n  putResponse: storeState.putData,\n  deleteResponse: storeState.deleteData\n});\n\nconst mapDispatchToProps = {\n  updatePutStatus\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(KanbanCard);","map":{"version":3,"sources":["/Users/hiagodiniz/Desktop/LetsCode/desafio-tecnico-frontend/FRONT/my-app/src/components/kanban-card/kanban-card.tsx"],"names":["faArrowLeft","faArrowRight","faBan","faCheck","faPen","faTrash","FontAwesomeIcon","clone","cloneDeep","get","React","connect","updatePutStatus","deleteCard","putCard","HttpRequestStatus","ListType","TextInput","TextareaInput","PreLoader","CardMode","KanbanCard","Component","constructor","props","renderCardView","card","titulo","handleDeletePressed","handleEditPressed","conteudo","lista","TO_DO","DONE","entity","id","cardElement","document","getElementById","setState","mode","EDIT","temporaryCard","cardHeight","renderCardEdit","state","event","setTemporaryCardValue","target","value","cancelEdit","confirmEdit","key","prevState","VIEW","undefined","renderPreLoader","componentWillReceiveProps","newProps","uuid","SUCCESS","NOOP","render","deleteResponse","putResponse","renderController","deleteStatus","putStatus","height","ONGOING","mapStateToProps","storeState","putData","deleteData","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { faArrowLeft, faArrowRight, faBan, faCheck, faPen, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { clone, cloneDeep, get } from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { IReducerState, updatePutStatus } from '../../reducers/reducer';\nimport { deleteCard, putCard } from '../../store/store';\nimport { HttpRequestStatus, ListType } from '../../utils/enums';\nimport { ICard } from '../../utils/interfaces';\nimport { TextInput } from '../inputs/text-input/text-input';\nimport { TextareaInput } from '../inputs/textarea-input/textarea-input';\nimport PreLoader from '../pre-loader/pre-loader';\nimport './kanban-card.scss';\n\ninterface IKanbanCardProps extends StateProps, DispatchProps {\n  card: ICard;\n}\n\ninterface IKanbanCardState {\n  temporaryCard: ICard;\n  mode: CardMode;\n  cardHeight?: number;\n}\n\nenum CardMode {\n  VIEW = 'VIEW',\n  EDIT = 'EDIT'\n}\n\nclass KanbanCard extends React.Component<IKanbanCardProps, IKanbanCardState>  {\n  constructor(props: IKanbanCardProps) {\n    super(props);\n\n    this.state = {\n      temporaryCard: this.props.card,\n      mode: CardMode.VIEW\n    };\n  }\n\n  componentWillReceiveProps(newProps: IKanbanCardProps) {\n    const uuid = this.props.card.id;\n\n    if (get(newProps, `putResponse.${this.props.card.id}`) === HttpRequestStatus.SUCCESS) {\n      this.setState({\n        mode: CardMode.VIEW\n      }, () => this.props.updatePutStatus(HttpRequestStatus.NOOP, uuid));\n    }\n  }\n\n  renderCardView = () => {\n    const { card } = this.props;\n\n    return (\n      <>\n        <div className={'card-header'}>\n          <h3 className={'card-title'}>{card.titulo}</h3>\n          <div className={'icons-container'}>\n            <FontAwesomeIcon className={'card-icon-op delete'} icon={faTrash} onClick={() => this.handleDeletePressed()} />\n            <FontAwesomeIcon className={'card-icon-op edit'} onClick={() => this.handleEditPressed()} icon={faPen} />\n          </div>\n        </div>\n        <div className={'card-body'}>\n          <div className={'text-container'}>\n            <p>{card.conteudo}</p>\n          </div>\n        </div>\n          <div className={'arrow-buttons-container'}>\n            {card.lista !== ListType.TO_DO && <FontAwesomeIcon className={'card-icon-op arrow left'} icon={faArrowLeft} />}\n            {card.lista !== ListType.DONE && <FontAwesomeIcon className={'card-icon-op arrow right'} icon={faArrowRight} />}\n          </div>\n      </>\n    );\n  };\n\n  handleDeletePressed = () => {\n    const entity = clone(this.props.card);\n    deleteCard(entity.id);\n  };\n\n  handleEditPressed = () => {\n    const cardElement = document.getElementById(this.props.card.id);\n    this.setState({\n      mode: CardMode.EDIT,\n      temporaryCard: cloneDeep(this.props.card),\n      cardHeight: get(cardElement, 'clientHeight')\n    });\n  };\n\n  renderCardEdit = () => {\n    const { temporaryCard } = this.state;\n\n    return (\n      <>\n        <div className={'card-header'}>\n          <TextInput\n            value={temporaryCard.titulo}\n            onChange={event => this.setTemporaryCardValue(event.target.value, 'titulo')}\n          />\n          <div className={'icons-container'}>\n            <FontAwesomeIcon className={'card-icon cancel'} onClick={() => this.cancelEdit()} icon={faBan} />\n            <FontAwesomeIcon className={'card-icon confirm'} onClick={() => this.confirmEdit()} icon={faCheck} />\n          </div>\n        </div>\n        <div className={'card-body'}>\n          <div className={'text-container'}>\n            <TextareaInput\n              value={temporaryCard.conteudo}\n              onChange={event => this.setTemporaryCardValue(event.target.value, 'conteudo')}\n            />\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  setTemporaryCardValue = (value: string, key: string) => {\n    this.setState(prevState => ({\n      temporaryCard: {\n        ...prevState.temporaryCard,\n        [key]: value\n      }\n    }));\n  };\n\n  cancelEdit = () => {\n    this.setState({\n      mode: CardMode.VIEW,\n      cardHeight: undefined\n    });\n  };\n\n  confirmEdit = () => {\n    const entity = this.state.temporaryCard;\n    putCard(entity);\n  };\n\n  renderPreLoader = () => <PreLoader/>\n\n  render() {\n    const { card, deleteResponse, putResponse } = this.props;\n    const { mode, cardHeight } = this.state;\n    const renderController = {\n      VIEW: () => this.renderCardView(),\n      EDIT: () => this.renderCardEdit()\n    };\n    const deleteStatus = get(deleteResponse, `${card.id}`, HttpRequestStatus.NOOP);\n    const putStatus = get(putResponse, `${card.id}`, HttpRequestStatus.NOOP);\n\n    return (\n      <div id={card.id} className={`kanban-card-container ${card.lista} ${mode}`} style={ cardHeight ? { height: `${cardHeight - 25}px` } : {} }>\n        {(deleteStatus === HttpRequestStatus.ONGOING || putStatus === HttpRequestStatus.ONGOING) ? this.renderPreLoader() : renderController[mode]()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (storeState: IReducerState) => ({\n  putResponse: storeState.putData,\n  deleteResponse: storeState.deleteData\n});\n\nconst mapDispatchToProps = {\n  updatePutStatus\n}\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\n\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KanbanCard);\n"]},"metadata":{},"sourceType":"module"}