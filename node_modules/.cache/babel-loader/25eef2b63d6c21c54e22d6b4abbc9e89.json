{"ast":null,"code":"import axios from 'axios';\nimport { get } from 'lodash';\nimport { createStore } from 'redux';\nimport appReducer from '../reducers/reducer';\nimport { updateCards, updateGetStatus } from '../reducers/reducer';\nimport { HttpRequestStatus } from '../utils/enums';\nimport { API_PREFIX, getRequestConfig } from '../utils/utils';\nconst store = createStore(appReducer);\nconst requestConfig = getRequestConfig();\nexport const getCards = () => {\n  store.dispatch(updateGetStatus(HttpRequestStatus.ONGOING));\n  const promise = axios.get(`${API_PREFIX}/cards/`, requestConfig);\n  promise.then(response => {\n    store.dispatch(updateGetStatus(HttpRequestStatus.SUCCESS));\n    const separatedList = {\n      ToDo: [],\n      Doing: [],\n      Done: []\n    };\n    response.data.forEach(it => {\n      separatedList[get(it, 'lista', '')].push(it);\n    });\n    store.dispatch(updateCards(separatedList));\n  }).catch(error => store.dispatch(updateGetStatus(HttpRequestStatus.ERROR)));\n};\nexport const getStore = () => store;","map":{"version":3,"sources":["/Users/hiagodiniz/Desktop/LetsCode/desafio-tecnico-frontend/FRONT/my-app/src/store/store.ts"],"names":["axios","get","createStore","appReducer","updateCards","updateGetStatus","HttpRequestStatus","API_PREFIX","getRequestConfig","store","requestConfig","getCards","dispatch","ONGOING","promise","then","response","SUCCESS","separatedList","ToDo","Doing","Done","data","forEach","it","push","catch","error","ERROR","getStore"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,qBAA7C;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,gBAA7C;AAEA,MAAMC,KAAK,GAAGP,WAAW,CAACC,UAAD,CAAzB;AAEA,MAAMO,aAAa,GAAGF,gBAAgB,EAAtC;AAEA,OAAO,MAAMG,QAAQ,GAAG,MAAM;AAC5BF,EAAAA,KAAK,CAACG,QAAN,CAAeP,eAAe,CAACC,iBAAiB,CAACO,OAAnB,CAA9B;AACA,QAAMC,OAAO,GAAGd,KAAK,CAACC,GAAN,CAAW,GAAEM,UAAW,SAAxB,EAAkCG,aAAlC,CAAhB;AACAI,EAAAA,OAAO,CAACC,IAAR,CAAaC,QAAQ,IAAI;AACvBP,IAAAA,KAAK,CAACG,QAAN,CAAeP,eAAe,CAACC,iBAAiB,CAACW,OAAnB,CAA9B;AACA,UAAMC,aAAkB,GAAG;AACzBC,MAAAA,IAAI,EAAE,EADmB;AAEzBC,MAAAA,KAAK,EAAE,EAFkB;AAGzBC,MAAAA,IAAI,EAAE;AAHmB,KAA3B;AAMAL,IAAAA,QAAQ,CAACM,IAAT,CAAcC,OAAd,CAAuBC,EAAD,IAAa;AACjCN,MAAAA,aAAa,CAACjB,GAAG,CAACuB,EAAD,EAAK,OAAL,EAAc,EAAd,CAAJ,CAAb,CAAoCC,IAApC,CAAyCD,EAAzC;AACD,KAFD;AAIAf,IAAAA,KAAK,CAACG,QAAN,CAAeR,WAAW,CAACc,aAAD,CAA1B;AACD,GAbD,EAaGQ,KAbH,CAaSC,KAAK,IAAIlB,KAAK,CAACG,QAAN,CAAeP,eAAe,CAACC,iBAAiB,CAACsB,KAAnB,CAA9B,CAblB;AAcD,CAjBM;AAqBP,OAAO,MAAMC,QAAQ,GAAG,MAAMpB,KAAvB","sourcesContent":["\nimport axios from 'axios';\nimport { get } from 'lodash';\nimport { createStore } from 'redux';\nimport appReducer from '../reducers/reducer';\nimport { updateCards, updateGetStatus } from '../reducers/reducer';\nimport { HttpRequestStatus } from '../utils/enums';\nimport { API_PREFIX, getRequestConfig } from '../utils/utils';\n\nconst store = createStore(appReducer);\n\nconst requestConfig = getRequestConfig();\n\nexport const getCards = () => {\n  store.dispatch(updateGetStatus(HttpRequestStatus.ONGOING));\n  const promise = axios.get(`${API_PREFIX}/cards/`, requestConfig);\n  promise.then(response => {\n    store.dispatch(updateGetStatus(HttpRequestStatus.SUCCESS));\n    const separatedList: any = {\n      ToDo: [],\n      Doing: [],\n      Done: []\n    };\n\n    response.data.forEach((it: any) => {\n      separatedList[get(it, 'lista', '')].push(it);\n    });\n\n    store.dispatch(updateCards(separatedList))\n  }).catch(error => store.dispatch(updateGetStatus(HttpRequestStatus.ERROR)));\n};\n\n\n\nexport const getStore = () => store;"]},"metadata":{},"sourceType":"module"}