{"ast":null,"code":"var _jsxFileName = \"/Users/hiagodiniz/Desktop/LetsCode/desafio-tecnico-frontend/FRONT/my-app/src/components/new-card-adder/new-card-adder.tsx\";\nimport React from 'react';\nimport './new-card-adder.scss';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { connect } from 'react-redux';\nimport { TextInput } from '../inputs/text-input/text-input';\nimport { TextareaInput } from '../inputs/textarea-input/textarea-input';\nimport { ListType } from '../../utils/enums';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewCardAdder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setTemporaryCardValue = (value, key) => this.setState(prevState => ({\n      temporaryCard: { ...prevState.temporaryCard,\n        [key]: value\n      }\n    }));\n\n    this.toggleExpanded = () => this.setState(prevState => ({\n      expanded: !prevState.expanded\n    }));\n\n    this.state = {\n      expanded: false,\n      temporaryCard: {\n        lista: ListType.TO_DO\n      }\n    };\n  }\n\n  render() {\n    const {\n      expanded,\n      temporaryCard\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `new-card-adder-container ${expanded && 'expanded'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'form-content hidden',\n        children: [/*#__PURE__*/_jsxDEV(TextInput, {\n          title: 'Título',\n          placeholder: 'Ex: Marcar reunião',\n          value: temporaryCard.titulo,\n          onChange: event => this.setTemporaryCardValue(event.target.value, 'titulo')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextareaInput, {\n          title: 'Conteúdo',\n          placeholder: 'Ex: Falar com Fulano sobre a reunião',\n          value: temporaryCard.conteudo,\n          onChange: event => this.setTemporaryCardValue(event.target.value, 'conteudo')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'create-card-button-container',\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: 'add-button',\n          type: 'button',\n          onClick: () => this.toggleExpanded(),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: 'text',\n            children: \"Criar novo card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: 'add-icon',\n            icon: faPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = storeState => ({\n  putResponse: storeState.putData,\n  deleteResponse: storeState.deleteData\n});\n\nexport default connect(mapStateToProps)(NewCardAdder);","map":{"version":3,"sources":["/Users/hiagodiniz/Desktop/LetsCode/desafio-tecnico-frontend/FRONT/my-app/src/components/new-card-adder/new-card-adder.tsx"],"names":["React","faPlus","FontAwesomeIcon","connect","TextInput","TextareaInput","ListType","NewCardAdder","Component","constructor","props","setTemporaryCardValue","value","key","setState","prevState","temporaryCard","toggleExpanded","expanded","state","lista","TO_DO","render","titulo","event","target","conteudo","mapStateToProps","storeState","putResponse","putData","deleteResponse","deleteData"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './new-card-adder.scss';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IReducerState } from '../../reducers/reducer';\nimport { connect } from 'react-redux';\nimport { TextInput } from '../inputs/text-input/text-input';\nimport { TextareaInput } from '../inputs/textarea-input/textarea-input';\nimport { ITemporaryCard } from '../../utils/interfaces';\nimport { ListType } from '../../utils/enums';\n\ninterface INewCardAdderState {\n  expanded: boolean;\n  temporaryCard: ITemporaryCard;\n}\n\nclass NewCardAdder extends React.Component<StateProps, INewCardAdderState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      expanded: false,\n      temporaryCard: {\n        lista: ListType.TO_DO\n      } \n    };\n  }\n\n  setTemporaryCardValue = (value: string, key: 'titulo' | 'conteudo') => this.setState(prevState => ({\n    temporaryCard: {\n      ...prevState.temporaryCard,\n      [key]: value\n    }\n  }));\n\n  toggleExpanded = () => this.setState(prevState => ({ expanded: !prevState.expanded }));\n\n  render() {\n    const { expanded, temporaryCard } = this.state;\n\n    return (\n      <div className={`new-card-adder-container ${expanded && 'expanded'}`}>\n        <div className={'form-content hidden'}>\n          <TextInput\n            title={'Título'}\n            placeholder={'Ex: Marcar reunião'}\n            value={temporaryCard.titulo}\n            onChange={event => this.setTemporaryCardValue(event.target.value, 'titulo')}\n          />\n          <TextareaInput\n            title={'Conteúdo'}\n            placeholder={'Ex: Falar com Fulano sobre a reunião'}\n            value={temporaryCard.conteudo}\n            onChange={event => this.setTemporaryCardValue(event.target.value, 'conteudo')}\n          />\n        </div>\n        <div className={'create-card-button-container'}>\n          <button className={'add-button'} type={'button'} onClick={() => this.toggleExpanded()}>\n            <span className={'text'}>Criar novo card</span>\n            <FontAwesomeIcon className={'add-icon'} icon={faPlus}/>\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (storeState: IReducerState) => ({\n  putResponse: storeState.putData,\n  deleteResponse: storeState.deleteData\n});\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\n\nexport default connect(mapStateToProps)(NewCardAdder);\n"]},"metadata":{},"sourceType":"module"}