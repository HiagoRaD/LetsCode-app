{"ast":null,"code":"var _jsxFileName = \"/Users/hiagodiniz/Desktop/LetsCode/desafio-tecnico-frontend/FRONT/my-app/src/components/kanban-column/kanban-column.tsx\";\nimport { get, kebabCase, upperFirst } from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport KanbanCard from '../kanban-card/kanban-card';\nimport './kanban-column.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nclass KanbanColumn extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getColumnTitle = type => upperFirst(kebabCase(type).replace('-', ''));\n  }\n\n  render() {\n    const cardsList = get(this.props.cardsList, this.props.type, []);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'kanban-column-container',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'column-head',\n        children: this.getColumnTitle(this.props.type)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), cardsList.map((card, index) => /*#__PURE__*/_jsxDEV(KanbanCard, {\n        card: card\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = (storeState, ownProps) => ({\n  cardsList: storeState.cards\n});\n\nexport default connect(mapStateToProps)(KanbanColumn);","map":{"version":3,"sources":["/Users/hiagodiniz/Desktop/LetsCode/desafio-tecnico-frontend/FRONT/my-app/src/components/kanban-column/kanban-column.tsx"],"names":["get","kebabCase","upperFirst","React","connect","KanbanCard","KanbanColumn","Component","getColumnTitle","type","replace","render","cardsList","props","map","card","index","mapStateToProps","storeState","ownProps","cards"],"mappings":";AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,UAAzB,QAA2C,QAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAIA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAO,sBAAP;;AAIC;;AAED,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAAmE;AAAA;AAAA;;AAAA,SACjEC,cADiE,GAC/CC,IAAD,IAAoBP,UAAU,CAACD,SAAS,CAACQ,IAAD,CAAT,CAAgBC,OAAhB,CAAwB,GAAxB,EAA6B,EAA7B,CAAD,CADkB;AAAA;;AAGjEC,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAkB,GAAGZ,GAAG,CAAC,KAAKa,KAAL,CAAWD,SAAZ,EAAuB,KAAKC,KAAL,CAAWJ,IAAlC,EAAwC,EAAxC,CAA9B;AAEA,wBACE;AAAK,MAAA,SAAS,EAAE,yBAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAE,aAAhB;AAAA,kBACG,KAAKD,cAAL,CAAoB,KAAKK,KAAL,CAAWJ,IAA/B;AADH;AAAA;AAAA;AAAA;AAAA,cADF,EAIGG,SAAS,CAACE,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,kBACb,QAAC,UAAD;AAAwB,QAAA,IAAI,EAAED;AAA9B,SAAiBC,KAAjB;AAAA;AAAA;AAAA;AAAA,cADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAhBgE;;AAiBlE;;AAED,MAAMC,eAAe,GAAG,CAACC,UAAD,EAA4BC,QAA5B,MAA+C;AACrEP,EAAAA,SAAS,EAAEM,UAAU,CAACE;AAD+C,CAA/C,CAAxB;;AAMA,eAAehB,OAAO,CAACa,eAAD,CAAP,CAAyBX,YAAzB,CAAf","sourcesContent":["import { get, kebabCase, upperFirst } from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { IReducerState } from '../../reducers/reducer';\nimport { ListType } from '../../utils/enums';\nimport { ICard } from '../../utils/interfaces';\nimport KanbanCard from '../kanban-card/kanban-card';\nimport './kanban-column.scss';\n\ninterface IKanbanColumnProps extends StateProps {\n  type: ListType;\n};\n\nclass KanbanColumn extends React.Component<IKanbanColumnProps, {}> {\n  getColumnTitle = (type: ListType) => upperFirst(kebabCase(type).replace('-', ''));\n\n  render() {\n    const cardsList: ICard[] = get(this.props.cardsList, this.props.type, []);\n\n    return (\n      <div className={'kanban-column-container'}>\n        <div className={'column-head'}>\n          {this.getColumnTitle(this.props.type)}\n        </div>\n        {cardsList.map((card, index) => (\n          <KanbanCard key={index} card={card} />\n        ))}\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (storeState: IReducerState, ownProps: any) => ({\n  cardsList: storeState.cards\n});\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\n\nexport default connect(mapStateToProps)(KanbanColumn);\n"]},"metadata":{},"sourceType":"module"}