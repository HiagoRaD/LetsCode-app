{"ast":null,"code":"import axios from 'axios';\nimport { get } from 'lodash';\nimport { createStore } from 'redux';\nimport appReducer from '../reducers/reducer';\nimport './App.scss';\nimport { updateCards, updateGetStatus } from './reducers/reducer';\nimport { HttpRequestStatus } from './utils/enums';\nimport { API_PREFIX, getRequestConfig } from './utils/utils';\nconst store = createStore(appReducer);\nexport const getCards = () => {\n  store.dispatch(updateGetStatus(HttpRequestStatus.ONGOING));\n  const promise = axios.get(`${API_PREFIX}/cards/`, getRequestConfig());\n  promise.then(response => {\n    store.dispatch(updateGetStatus(HttpRequestStatus.SUCCESS));\n    const separatedList = {\n      ToDo: [],\n      Doing: [],\n      Done: []\n    };\n    response.data.forEach(it => {\n      separatedList[get(it, 'lista', '')].push(it);\n    });\n    store.dispatch(updateCards(separatedList));\n  });\n  return null;\n};\nexport const getStore = () => store;","map":{"version":3,"sources":["/Users/hiagodiniz/Desktop/LetsCode/desafio-tecnico-frontend/FRONT/my-app/src/store/store.ts"],"names":["axios","get","createStore","appReducer","updateCards","updateGetStatus","HttpRequestStatus","API_PREFIX","getRequestConfig","store","getCards","dispatch","ONGOING","promise","then","response","SUCCESS","separatedList","ToDo","Doing","Done","data","forEach","it","push","getStore"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAO,YAAP;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,oBAA7C;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,eAA7C;AAEA,MAAMC,KAAK,GAAGP,WAAW,CAACC,UAAD,CAAzB;AAEA,OAAO,MAAMO,QAAQ,GAAG,MAAM;AAC5BD,EAAAA,KAAK,CAACE,QAAN,CAAeN,eAAe,CAACC,iBAAiB,CAACM,OAAnB,CAA9B;AACA,QAAMC,OAAO,GAAGb,KAAK,CAACC,GAAN,CAAW,GAAEM,UAAW,SAAxB,EAAkCC,gBAAgB,EAAlD,CAAhB;AACAK,EAAAA,OAAO,CAACC,IAAR,CAAaC,QAAQ,IAAI;AACvBN,IAAAA,KAAK,CAACE,QAAN,CAAeN,eAAe,CAACC,iBAAiB,CAACU,OAAnB,CAA9B;AACA,UAAMC,aAAkB,GAAG;AACzBC,MAAAA,IAAI,EAAE,EADmB;AAEzBC,MAAAA,KAAK,EAAE,EAFkB;AAGzBC,MAAAA,IAAI,EAAE;AAHmB,KAA3B;AAMAL,IAAAA,QAAQ,CAACM,IAAT,CAAcC,OAAd,CAAuBC,EAAD,IAAa;AACjCN,MAAAA,aAAa,CAAChB,GAAG,CAACsB,EAAD,EAAK,OAAL,EAAc,EAAd,CAAJ,CAAb,CAAoCC,IAApC,CAAyCD,EAAzC;AACD,KAFD;AAIAd,IAAAA,KAAK,CAACE,QAAN,CAAeP,WAAW,CAACa,aAAD,CAA1B;AACD,GAbD;AAcA,SAAO,IAAP;AACD,CAlBM;AAsBP,OAAO,MAAMQ,QAAQ,GAAG,MAAMhB,KAAvB","sourcesContent":["\nimport axios from 'axios';\nimport { get } from 'lodash';\nimport { createStore } from 'redux';\nimport appReducer from '../reducers/reducer';\nimport './App.scss';\nimport { updateCards, updateGetStatus } from './reducers/reducer';\nimport { HttpRequestStatus } from './utils/enums';\nimport { API_PREFIX, getRequestConfig } from './utils/utils';\n\nconst store = createStore(appReducer);\n\nexport const getCards = () => {\n  store.dispatch(updateGetStatus(HttpRequestStatus.ONGOING));\n  const promise = axios.get(`${API_PREFIX}/cards/`, getRequestConfig());\n  promise.then(response => {\n    store.dispatch(updateGetStatus(HttpRequestStatus.SUCCESS));\n    const separatedList: any = {\n      ToDo: [],\n      Doing: [],\n      Done: []\n    };\n\n    response.data.forEach((it: any) => {\n      separatedList[get(it, 'lista', '')].push(it);\n    });\n\n    store.dispatch(updateCards(separatedList))\n  });\n  return null;\n};\n\n\n\nexport const getStore = () => store;"]},"metadata":{},"sourceType":"module"}