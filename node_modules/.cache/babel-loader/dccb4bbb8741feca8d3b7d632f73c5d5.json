{"ast":null,"code":"import { cloneDeep } from 'lodash';\nimport { HttpRequestStatus } from '../utils/enums';\nimport { createNewCardState, updateCardsState, updateListsCardState } from '../utils/reducer-utils';\nexport const ACTION_TYPES = {\n  UPDATE_CARD: 'UPDATE_CARD',\n  ADD_NEW_CARD: 'ADD_NEW_CARD',\n  UPDATE_CARD_LIST: 'UPDATE_CARD_LIST',\n  UPDATE_GET_STATUS: 'UPDATE_GET_STATUS',\n  UPDATE_GET_DATA: 'UPDATE_GET_DATA',\n  UPDATE_PUT_STATUS: 'UPDATE_PUT_STATUS',\n  UPDATE_PUT_DATA: 'UPDATE_PUT_DATA',\n  UPDATE_POST_STATUS: 'UPDATE_POST_STATUS',\n  UPDATE_POST_DATA: 'UPDATE_POST_DATA',\n  UPDATE_DELETE_STATUS: 'UPDATE_DELETE_STATUS',\n  UPDATE_DELETE_DATA: 'UPDATE_DELETE_DATA',\n  UPDATE_TOKEN: 'UPDATE_TOKEN',\n  UPDATE_CARDS: 'UPDATE_CARDS'\n};\nconst initialState = {\n  cards: {\n    'ToDo': [],\n    'Doing': [],\n    'Done': []\n  },\n  getData: {},\n  putData: {},\n  postStatus: HttpRequestStatus.NOOP,\n  deleteData: {},\n  jwtToken: ''\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.UPDATE_CARDS:\n      return { ...state,\n        cards: action.payload.data\n      };\n\n    case ACTION_TYPES.UPDATE_GET_STATUS:\n      return { ...state,\n        getData: { ...state.getData,\n          status: action.payload.status\n        }\n      };\n\n    case ACTION_TYPES.UPDATE_GET_DATA:\n      return { ...state,\n        getData: { ...state.getData,\n          data: action.payload.data\n        }\n      };\n\n    case ACTION_TYPES.UPDATE_PUT_STATUS:\n      return { ...state,\n        putData: { ...state.putData,\n          [action.meta.key]: action.payload.status\n        }\n      };\n\n    case ACTION_TYPES.UPDATE_DELETE_STATUS:\n      return { ...state,\n        deleteData: { ...state.deleteData,\n          [action.meta.key]: action.payload.status\n        }\n      };\n\n    case ACTION_TYPES.UPDATE_POST_STATUS:\n      return { ...state,\n        postStatus: action.payload.status\n      };\n\n    case ACTION_TYPES.UPDATE_CARD:\n      return { ...state,\n        cards: updateCardsState(cloneDeep(state.cards), action.payload.data)\n      };\n\n    case ACTION_TYPES.ADD_NEW_CARD:\n      return { ...state,\n        cards: createNewCardState(cloneDeep(state.cards), action.payload.data)\n      };\n\n    case ACTION_TYPES.UPDATE_CARD_LIST:\n      return { ...state,\n        cards: updateListsCardState(cloneDeep(state.cards), action.payload.data)\n      };\n\n    case ACTION_TYPES.UPDATE_TOKEN:\n      return { ...state,\n        jwtToken: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\nexport const updateJwtToken = newToken => ({\n  type: ACTION_TYPES.UPDATE_TOKEN,\n  payload: newToken\n});\nexport const updateCard = card => ({\n  type: ACTION_TYPES.UPDATE_CARD,\n  payload: {\n    data: card\n  }\n});\nexport const addNewCard = card => ({\n  type: ACTION_TYPES.ADD_NEW_CARD,\n  payload: {\n    data: card\n  }\n});\nexport const updateCards = cardsList => ({\n  type: ACTION_TYPES.UPDATE_CARDS,\n  payload: {\n    data: cardsList\n  }\n});\nexport const updateGetStatus = status => ({\n  type: ACTION_TYPES.UPDATE_GET_STATUS,\n  payload: {\n    status\n  }\n});\nexport const updatePostStatus = status => ({\n  type: ACTION_TYPES.UPDATE_POST_STATUS,\n  payload: {\n    status\n  }\n});\nexport const updateCardList = card => ({\n  type: ACTION_TYPES.UPDATE_CARD_LIST,\n  payload: {\n    data: card\n  }\n});\nexport const updatePutStatus = (status, uuid) => ({\n  type: ACTION_TYPES.UPDATE_PUT_STATUS,\n  payload: {\n    status\n  },\n  meta: {\n    key: uuid\n  }\n});\nexport const updateDeleteStatus = (status, uuid) => ({\n  type: ACTION_TYPES.UPDATE_DELETE_STATUS,\n  payload: {\n    status\n  },\n  meta: {\n    key: uuid\n  }\n});","map":{"version":3,"sources":["/Users/hiagodiniz/Desktop/LetsCode/desafio-tecnico-frontend/FRONT/my-app/src/reducers/reducer.ts"],"names":["cloneDeep","HttpRequestStatus","createNewCardState","updateCardsState","updateListsCardState","ACTION_TYPES","UPDATE_CARD","ADD_NEW_CARD","UPDATE_CARD_LIST","UPDATE_GET_STATUS","UPDATE_GET_DATA","UPDATE_PUT_STATUS","UPDATE_PUT_DATA","UPDATE_POST_STATUS","UPDATE_POST_DATA","UPDATE_DELETE_STATUS","UPDATE_DELETE_DATA","UPDATE_TOKEN","UPDATE_CARDS","initialState","cards","getData","putData","postStatus","NOOP","deleteData","jwtToken","appReducer","state","action","type","payload","data","status","meta","key","updateJwtToken","newToken","updateCard","card","addNewCard","updateCards","cardsList","updateGetStatus","updatePostStatus","updateCardList","updatePutStatus","uuid","updateDeleteStatus"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AAEA,SAASC,kBAAT,EAA6BC,gBAA7B,EAA+CC,oBAA/C,QAA2E,wBAA3E;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,WAAW,EAAE,aADa;AAE1BC,EAAAA,YAAY,EAAE,cAFY;AAG1BC,EAAAA,gBAAgB,EAAE,kBAHQ;AAK1BC,EAAAA,iBAAiB,EAAE,mBALO;AAM1BC,EAAAA,eAAe,EAAE,iBANS;AAQ1BC,EAAAA,iBAAiB,EAAE,mBARO;AAS1BC,EAAAA,eAAe,EAAE,iBATS;AAW1BC,EAAAA,kBAAkB,EAAE,oBAXM;AAY1BC,EAAAA,gBAAgB,EAAE,kBAZQ;AAc1BC,EAAAA,oBAAoB,EAAE,sBAdI;AAe1BC,EAAAA,kBAAkB,EAAE,oBAfM;AAiB1BC,EAAAA,YAAY,EAAE,cAjBY;AAmB1BC,EAAAA,YAAY,EAAE;AAnBY,CAArB;AA+BP,MAAMC,YAA2B,GAAG;AAClCC,EAAAA,KAAK,EAAE;AACL,YAAQ,EADH;AAEL,aAAS,EAFJ;AAGL,YAAQ;AAHH,GAD2B;AAMlCC,EAAAA,OAAO,EAAE,EANyB;AAOlCC,EAAAA,OAAO,EAAE,EAPyB;AAQlCC,EAAAA,UAAU,EAAEtB,iBAAiB,CAACuB,IARI;AASlCC,EAAAA,UAAU,EAAE,EATsB;AAUlCC,EAAAA,QAAQ,EAAE;AAVwB,CAApC;;AAaA,MAAMC,UAAU,GAAG,CAACC,KAAoB,GAAGT,YAAxB,EAAsCU,MAAtC,KAAyE;AAC1F,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKzB,YAAY,CAACa,YAAlB;AACE,aAAO,EACL,GAAGU,KADE;AAELR,QAAAA,KAAK,EAAES,MAAM,CAACE,OAAP,CAAeC;AAFjB,OAAP;;AAIF,SAAK3B,YAAY,CAACI,iBAAlB;AACE,aAAO,EACL,GAAGmB,KADE;AAELP,QAAAA,OAAO,EAAE,EACP,GAAGO,KAAK,CAACP,OADF;AAEPY,UAAAA,MAAM,EAAEJ,MAAM,CAACE,OAAP,CAAeE;AAFhB;AAFJ,OAAP;;AAOF,SAAK5B,YAAY,CAACK,eAAlB;AACE,aAAO,EACL,GAAGkB,KADE;AAELP,QAAAA,OAAO,EAAE,EACP,GAAGO,KAAK,CAACP,OADF;AAEPW,UAAAA,IAAI,EAAEH,MAAM,CAACE,OAAP,CAAeC;AAFd;AAFJ,OAAP;;AAOF,SAAK3B,YAAY,CAACM,iBAAlB;AACE,aAAO,EACL,GAAGiB,KADE;AAELN,QAAAA,OAAO,EAAE,EACP,GAAGM,KAAK,CAACN,OADF;AAEP,WAACO,MAAM,CAACK,IAAP,CAAYC,GAAb,GAAmBN,MAAM,CAACE,OAAP,CAAeE;AAF3B;AAFJ,OAAP;;AAOF,SAAK5B,YAAY,CAACU,oBAAlB;AACE,aAAO,EACL,GAAGa,KADE;AAELH,QAAAA,UAAU,EAAE,EACV,GAAGG,KAAK,CAACH,UADC;AAEV,WAACI,MAAM,CAACK,IAAP,CAAYC,GAAb,GAAmBN,MAAM,CAACE,OAAP,CAAeE;AAFxB;AAFP,OAAP;;AAOF,SAAK5B,YAAY,CAACQ,kBAAlB;AACE,aAAO,EACL,GAAGe,KADE;AAELL,QAAAA,UAAU,EAAEM,MAAM,CAACE,OAAP,CAAeE;AAFtB,OAAP;;AAIF,SAAK5B,YAAY,CAACC,WAAlB;AACE,aAAO,EACL,GAAGsB,KADE;AAELR,QAAAA,KAAK,EAAEjB,gBAAgB,CAACH,SAAS,CAAC4B,KAAK,CAACR,KAAP,CAAV,EAAyBS,MAAM,CAACE,OAAP,CAAeC,IAAxC;AAFlB,OAAP;;AAIF,SAAK3B,YAAY,CAACE,YAAlB;AACE,aAAO,EACL,GAAGqB,KADE;AAELR,QAAAA,KAAK,EAAElB,kBAAkB,CAACF,SAAS,CAAC4B,KAAK,CAACR,KAAP,CAAV,EAAyBS,MAAM,CAACE,OAAP,CAAeC,IAAxC;AAFpB,OAAP;;AAIF,SAAK3B,YAAY,CAACG,gBAAlB;AACE,aAAO,EACL,GAAGoB,KADE;AAELR,QAAAA,KAAK,EAAEhB,oBAAoB,CAACJ,SAAS,CAAC4B,KAAK,CAACR,KAAP,CAAV,EAAyBS,MAAM,CAACE,OAAP,CAAeC,IAAxC;AAFtB,OAAP;;AAIF,SAAK3B,YAAY,CAACY,YAAlB;AACE,aAAO,EACL,GAAGW,KADE;AAELF,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AAFZ,OAAP;;AAIF;AACE,aAAOH,KAAP;AAhEJ;AAkED,CAnED;;AAqEA,eAAeD,UAAf;AAEA,OAAO,MAAMS,cAAc,GAAIC,QAAD,KAAuB;AACnDP,EAAAA,IAAI,EAAEzB,YAAY,CAACY,YADgC;AAEnDc,EAAAA,OAAO,EAAEM;AAF0C,CAAvB,CAAvB;AAKP,OAAO,MAAMC,UAAU,GAAIC,IAAD,KAAkB;AAC1CT,EAAAA,IAAI,EAAEzB,YAAY,CAACC,WADuB;AAE1CyB,EAAAA,OAAO,EAAE;AAAEC,IAAAA,IAAI,EAAEO;AAAR;AAFiC,CAAlB,CAAnB;AAKP,OAAO,MAAMC,UAAU,GAAID,IAAD,KAAkB;AAC1CT,EAAAA,IAAI,EAAEzB,YAAY,CAACE,YADuB;AAE1CwB,EAAAA,OAAO,EAAE;AAAEC,IAAAA,IAAI,EAAEO;AAAR;AAFiC,CAAlB,CAAnB;AAKP,OAAO,MAAME,WAAW,GAAIC,SAAD,KAA4B;AACrDZ,EAAAA,IAAI,EAAEzB,YAAY,CAACa,YADkC;AAErDa,EAAAA,OAAO,EAAE;AAAEC,IAAAA,IAAI,EAAEU;AAAR;AAF4C,CAA5B,CAApB;AAKP,OAAO,MAAMC,eAAe,GAAIV,MAAD,KAAgC;AAC7DH,EAAAA,IAAI,EAAEzB,YAAY,CAACI,iBAD0C;AAE7DsB,EAAAA,OAAO,EAAE;AAAEE,IAAAA;AAAF;AAFoD,CAAhC,CAAxB;AAKP,OAAO,MAAMW,gBAAgB,GAAIX,MAAD,KAAgC;AAC9DH,EAAAA,IAAI,EAAEzB,YAAY,CAACQ,kBAD2C;AAE9DkB,EAAAA,OAAO,EAAE;AAAEE,IAAAA;AAAF;AAFqD,CAAhC,CAAzB;AAKP,OAAO,MAAMY,cAAc,GAAIN,IAAD,KAAkB;AAC9CT,EAAAA,IAAI,EAAEzB,YAAY,CAACG,gBAD2B;AAE9CuB,EAAAA,OAAO,EAAE;AAAEC,IAAAA,IAAI,EAAEO;AAAR;AAFqC,CAAlB,CAAvB;AAKP,OAAO,MAAMO,eAAe,GAAG,CAACb,MAAD,EAA4Bc,IAA5B,MAA8C;AAC3EjB,EAAAA,IAAI,EAAEzB,YAAY,CAACM,iBADwD;AAE3EoB,EAAAA,OAAO,EAAE;AAAEE,IAAAA;AAAF,GAFkE;AAG3EC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,GAAG,EAAEY;AAAP;AAHqE,CAA9C,CAAxB;AAMP,OAAO,MAAMC,kBAAkB,GAAG,CAACf,MAAD,EAA4Bc,IAA5B,MAA8C;AAC9EjB,EAAAA,IAAI,EAAEzB,YAAY,CAACU,oBAD2D;AAE9EgB,EAAAA,OAAO,EAAE;AAAEE,IAAAA;AAAF,GAFqE;AAG9EC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,GAAG,EAAEY;AAAP;AAHwE,CAA9C,CAA3B","sourcesContent":["import { cloneDeep } from 'lodash';\nimport { HttpRequestStatus } from '../utils/enums';\nimport { IAction, ICard, ICardsList, IReducerListObjects, IReducerListStatusObjects, IRequestData } from '../utils/interfaces';\nimport { createNewCardState, updateCardsState, updateListsCardState } from '../utils/reducer-utils';\n\nexport const ACTION_TYPES = {\n  UPDATE_CARD: 'UPDATE_CARD',\n  ADD_NEW_CARD: 'ADD_NEW_CARD',\n  UPDATE_CARD_LIST: 'UPDATE_CARD_LIST',\n\n  UPDATE_GET_STATUS: 'UPDATE_GET_STATUS',\n  UPDATE_GET_DATA: 'UPDATE_GET_DATA',\n  \n  UPDATE_PUT_STATUS: 'UPDATE_PUT_STATUS',\n  UPDATE_PUT_DATA: 'UPDATE_PUT_DATA',\n  \n  UPDATE_POST_STATUS: 'UPDATE_POST_STATUS',\n  UPDATE_POST_DATA: 'UPDATE_POST_DATA',\n  \n  UPDATE_DELETE_STATUS: 'UPDATE_DELETE_STATUS',\n  UPDATE_DELETE_DATA: 'UPDATE_DELETE_DATA',\n\n  UPDATE_TOKEN: 'UPDATE_TOKEN',\n\n  UPDATE_CARDS: 'UPDATE_CARDS'\n};\n\nexport interface IReducerState {\n  cards: ICardsList;\n  getData: IRequestData<ICard[]>;\n  putData: IReducerListStatusObjects;\n  postStatus: HttpRequestStatus;\n  deleteData: IReducerListStatusObjects;\n  jwtToken: string;\n}\n\nconst initialState: IReducerState = {\n  cards: {\n    'ToDo': [],\n    'Doing': [],\n    'Done': []\n  },\n  getData: {},\n  putData: {},\n  postStatus: HttpRequestStatus.NOOP,\n  deleteData: {},\n  jwtToken: ''\n};\n\nconst appReducer = (state: IReducerState = initialState, action: IAction): IReducerState => {\n  switch (action.type) {\n    case ACTION_TYPES.UPDATE_CARDS:\n      return {\n        ...state,\n        cards: action.payload.data\n      }; \n    case ACTION_TYPES.UPDATE_GET_STATUS:\n      return {\n        ...state,\n        getData: {\n          ...state.getData,\n          status: action.payload.status\n        }\n      };\n    case ACTION_TYPES.UPDATE_GET_DATA:\n      return {\n        ...state,\n        getData: {\n          ...state.getData,\n          data: action.payload.data\n        }\n      };\n    case ACTION_TYPES.UPDATE_PUT_STATUS:\n      return {\n        ...state,\n        putData: {\n          ...state.putData,\n          [action.meta.key]: action.payload.status\n        }\n      };\n    case ACTION_TYPES.UPDATE_DELETE_STATUS:\n      return {\n        ...state,\n        deleteData: {\n          ...state.deleteData,\n          [action.meta.key]: action.payload.status\n        }\n      };\n    case ACTION_TYPES.UPDATE_POST_STATUS:\n      return {\n        ...state,\n        postStatus: action.payload.status\n      };\n    case ACTION_TYPES.UPDATE_CARD:\n      return {\n        ...state,\n        cards: updateCardsState(cloneDeep(state.cards), action.payload.data)\n      };\n    case ACTION_TYPES.ADD_NEW_CARD:\n      return {\n        ...state,\n        cards: createNewCardState(cloneDeep(state.cards), action.payload.data)\n      };\n    case ACTION_TYPES.UPDATE_CARD_LIST:\n      return {\n        ...state,\n        cards: updateListsCardState(cloneDeep(state.cards), action.payload.data)\n      };\n    case ACTION_TYPES.UPDATE_TOKEN:\n      return {\n        ...state,\n        jwtToken: action.payload\n      }\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\n\nexport const updateJwtToken = (newToken: string) => ({\n  type: ACTION_TYPES.UPDATE_TOKEN,\n  payload: newToken\n});\n\nexport const updateCard = (card: ICard) => ({\n  type: ACTION_TYPES.UPDATE_CARD,\n  payload: { data: card }\n}); \n\nexport const addNewCard = (card: ICard) => ({\n  type: ACTION_TYPES.ADD_NEW_CARD,\n  payload: { data: card }\n}); \n\nexport const updateCards = (cardsList: ICardsList) => ({\n  type: ACTION_TYPES.UPDATE_CARDS,\n  payload: { data: cardsList }\n});\n\nexport const updateGetStatus = (status: HttpRequestStatus) => ({\n  type: ACTION_TYPES.UPDATE_GET_STATUS,\n  payload: { status }\n});\n\nexport const updatePostStatus = (status: HttpRequestStatus) => ({\n  type: ACTION_TYPES.UPDATE_POST_STATUS,\n  payload: { status }\n});\n\nexport const updateCardList = (card: ICard) => ({\n  type: ACTION_TYPES.UPDATE_CARD_LIST,\n  payload: { data: card }\n});\n\nexport const updatePutStatus = (status: HttpRequestStatus, uuid: string) => ({\n  type: ACTION_TYPES.UPDATE_PUT_STATUS,\n  payload: { status },\n  meta: { key: uuid }\n});\n\nexport const updateDeleteStatus = (status: HttpRequestStatus, uuid: string) => ({\n  type: ACTION_TYPES.UPDATE_DELETE_STATUS,\n  payload: { status },\n  meta: { key: uuid }\n});\n"]},"metadata":{},"sourceType":"module"}