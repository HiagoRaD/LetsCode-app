{"ast":null,"code":"import { useEffect, useState, useRef } from 'react';\nexport default function usePromise(promiseOrFn) {\n  const [state, setState] = useState({\n    loading: !!promiseOrFn,\n    error: null,\n    value: undefined\n  });\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n\n    if (!promiseOrFn) {\n      setState({\n        loading: false,\n        error: null,\n        value: undefined\n      });\n    } else {\n      if (state.loading === false) {\n        setState({\n          loading: true,\n          error: null,\n          value: undefined\n        });\n      }\n\n      let promise;\n\n      if (typeof promiseOrFn === 'function') {\n        promise = promiseOrFn();\n      } else {\n        promise = promiseOrFn;\n      }\n\n      promise.then(value => {\n        if (isMounted.current) {\n          setState({\n            loading: false,\n            error: null,\n            value\n          });\n        }\n      }).catch(error => {\n        if (isMounted.current) {\n          setState({\n            loading: false,\n            error,\n            value: undefined\n          });\n        }\n      });\n    }\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, [promiseOrFn]);\n  return state;\n}","map":{"version":3,"sources":["../../src/usePromise.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,EAAoB,QAApB,EAA8B,MAA9B,QAA4C,OAA5C;AAEA,eAAc,SAAU,UAAV,CACZ,WADY,EACgC;AAM5C,QAAM,CAAC,KAAD,EAAQ,QAAR,IAAoB,QAAQ,CAI/B;AACD,IAAA,OAAO,EAAE,CAAC,CAAC,WADV;AAED,IAAA,KAAK,EAAE,IAFN;AAGD,IAAA,KAAK,EAAE;AAHN,GAJ+B,CAAlC;AASA,QAAM,SAAS,GAAG,MAAM,CAAC,KAAD,CAAxB;AACA,EAAA,SAAS,CAAC,MAAK;AACb,IAAA,SAAS,CAAC,OAAV,GAAoB,IAApB;;AACA,QAAI,CAAC,WAAL,EAAkB;AAChB,MAAA,QAAQ,CAAC;AACP,QAAA,OAAO,EAAE,KADF;AAEP,QAAA,KAAK,EAAE,IAFA;AAGP,QAAA,KAAK,EAAE;AAHA,OAAD,CAAR;AAKD,KAND,MAMO;AACL,UAAI,KAAK,CAAC,OAAN,KAAkB,KAAtB,EAA6B;AAC3B,QAAA,QAAQ,CAAC;AACP,UAAA,OAAO,EAAE,IADF;AAEP,UAAA,KAAK,EAAE,IAFA;AAGP,UAAA,KAAK,EAAE;AAHA,SAAD,CAAR;AAKD;;AACD,UAAI,OAAJ;;AACA,UAAI,OAAO,WAAP,KAAuB,UAA3B,EAAuC;AACrC,QAAA,OAAO,GAAG,WAAW,EAArB;AACD,OAFD,MAEO;AACL,QAAA,OAAO,GAAG,WAAV;AACD;;AAED,MAAA,OAAO,CACJ,IADH,CACS,KAAD,IAAU;AACd,YAAI,SAAS,CAAC,OAAd,EAAuB;AACrB,UAAA,QAAQ,CAAC;AACP,YAAA,OAAO,EAAE,KADF;AAEP,YAAA,KAAK,EAAE,IAFA;AAGP,YAAA;AAHO,WAAD,CAAR;AAKD;AACF,OATH,EAUG,KAVH,CAUU,KAAD,IAAU;AACf,YAAI,SAAS,CAAC,OAAd,EAAuB;AACrB,UAAA,QAAQ,CAAC;AACP,YAAA,OAAO,EAAE,KADF;AAEP,YAAA,KAFO;AAGP,YAAA,KAAK,EAAE;AAHA,WAAD,CAAR;AAKD;AACF,OAlBH;AAmBD;;AAED,WAAO,MAAK;AACV,MAAA,SAAS,CAAC,OAAV,GAAoB,KAApB;AACD,KAFD;AAGD,GA/CQ,EA+CN,CAAC,WAAD,CA/CM,CAAT;AAiDA,SAAO,KAAP;AACD","sourceRoot":"","sourcesContent":["import { useEffect, useState, useRef } from 'react';\nexport default function usePromise(promiseOrFn) {\n    const [state, setState] = useState({\n        loading: !!promiseOrFn,\n        error: null,\n        value: undefined\n    });\n    const isMounted = useRef(false);\n    useEffect(() => {\n        isMounted.current = true;\n        if (!promiseOrFn) {\n            setState({\n                loading: false,\n                error: null,\n                value: undefined\n            });\n        }\n        else {\n            if (state.loading === false) {\n                setState({\n                    loading: true,\n                    error: null,\n                    value: undefined\n                });\n            }\n            let promise;\n            if (typeof promiseOrFn === 'function') {\n                promise = promiseOrFn();\n            }\n            else {\n                promise = promiseOrFn;\n            }\n            promise\n                .then((value) => {\n                if (isMounted.current) {\n                    setState({\n                        loading: false,\n                        error: null,\n                        value\n                    });\n                }\n            })\n                .catch((error) => {\n                if (isMounted.current) {\n                    setState({\n                        loading: false,\n                        error,\n                        value: undefined\n                    });\n                }\n            });\n        }\n        return () => {\n            isMounted.current = false;\n        };\n    }, [promiseOrFn]);\n    return state;\n}\n//# sourceMappingURL=usePromise.js.map"]},"metadata":{},"sourceType":"module"}