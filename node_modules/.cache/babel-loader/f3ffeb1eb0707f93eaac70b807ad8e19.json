{"ast":null,"code":"import axios from \"axios\";\nimport { get } from \"lodash\";\nimport { HttpRequestStatus } from \"../utils/enums\";\nimport { API_PREFIX, getRequestConfig } from \"../utils/utils\";\nimport { updateGetStatus, updateGetData, updateCards } from './reducer';\nexport const getCards = () => {\n  updateGetStatus(HttpRequestStatus.ONGOING);\n  const promise = axios.get(`${API_PREFIX}/cards/`, getRequestConfig());\n  promise.then(response => {\n    updateGetStatus(HttpRequestStatus.SUCCESS);\n    updateGetData(response.data);\n  });\n};\n\nconst formatCards = cards => {\n  const separatedList = {\n    ToDo: [],\n    Doing: [],\n    Done: []\n  };\n  cards.forEach(it => {\n    const list = get(separatedList, get(it, 'lista', ''), []);\n    list.push(it);\n    separatedList[get(it, 'lista', '')].push(it);\n  });\n  updateCards(separatedList);\n};","map":{"version":3,"sources":["/Users/hiagodiniz/Desktop/LetsCode/desafio-tecnico-frontend/FRONT/my-app/src/reducers/api-actions.ts"],"names":["axios","get","HttpRequestStatus","API_PREFIX","getRequestConfig","updateGetStatus","updateGetData","updateCards","getCards","ONGOING","promise","then","response","SUCCESS","data","formatCards","cards","separatedList","ToDo","Doing","Done","forEach","it","list","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AAEA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,gBAA7C;AACA,SAASC,eAAT,EAA0BC,aAA1B,EAAyCC,WAAzC,QAA4D,WAA5D;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5BH,EAAAA,eAAe,CAACH,iBAAiB,CAACO,OAAnB,CAAf;AACA,QAAMC,OAAO,GAAGV,KAAK,CAACC,GAAN,CAAW,GAAEE,UAAW,SAAxB,EAAkCC,gBAAgB,EAAlD,CAAhB;AACAM,EAAAA,OAAO,CAACC,IAAR,CAAaC,QAAQ,IAAI;AACvBP,IAAAA,eAAe,CAACH,iBAAiB,CAACW,OAAnB,CAAf;AACAP,IAAAA,aAAa,CAACM,QAAQ,CAACE,IAAV,CAAb;AACD,GAHD;AAID,CAPM;;AASP,MAAMC,WAAW,GAAIC,KAAD,IAAoB;AACtC,QAAMC,aAAkB,GAAG;AACzBC,IAAAA,IAAI,EAAE,EADmB;AAEzBC,IAAAA,KAAK,EAAE,EAFkB;AAGzBC,IAAAA,IAAI,EAAE;AAHmB,GAA3B;AAMAJ,EAAAA,KAAK,CAACK,OAAN,CAAcC,EAAE,IAAI;AAClB,UAAMC,IAAI,GAAGtB,GAAG,CAACgB,aAAD,EAAgBhB,GAAG,CAACqB,EAAD,EAAK,OAAL,EAAc,EAAd,CAAnB,EAAsC,EAAtC,CAAhB;AACAC,IAAAA,IAAI,CAACC,IAAL,CAAUF,EAAV;AAEAL,IAAAA,aAAa,CAAChB,GAAG,CAACqB,EAAD,EAAK,OAAL,EAAc,EAAd,CAAJ,CAAb,CAAoCE,IAApC,CAAyCF,EAAzC;AACD,GALD;AAOAf,EAAAA,WAAW,CAACU,aAAD,CAAX;AACD,CAfD","sourcesContent":["import axios from \"axios\";\nimport { get } from \"lodash\";\nimport { HttpRequestStatus } from \"../utils/enums\";\nimport { ICard, ICardsList } from \"../utils/interfaces\";\nimport { API_PREFIX, getRequestConfig } from \"../utils/utils\";\nimport { updateGetStatus, updateGetData, updateCards } from './reducer';\n\nexport const getCards = () => {\n  updateGetStatus(HttpRequestStatus.ONGOING);\n  const promise = axios.get(`${API_PREFIX}/cards/`, getRequestConfig());\n  promise.then(response => {\n    updateGetStatus(HttpRequestStatus.SUCCESS);\n    updateGetData(response.data);\n  });\n};\n\nconst formatCards = (cards: ICard[]) => {\n  const separatedList: any = {\n    ToDo: [],\n    Doing: [],\n    Done: []\n  }\n\n  cards.forEach(it => {\n    const list = get(separatedList, get(it, 'lista', ''), []);\n    list.push(it);\n\n    separatedList[get(it, 'lista', '')].push(it);\n  });\n\n  updateCards(separatedList)\n}; "]},"metadata":{},"sourceType":"module"}