{"ast":null,"code":"var _jsxFileName = \"/Users/hiagodiniz/Desktop/LetsCode/desafio-tecnico-frontend/FRONT/my-app/src/components/kanban-card/kanban-card.tsx\";\nimport { faArrowLeft, faArrowRight, faBan, faCheck, faPen, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { clone, cloneDeep, get } from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { updatePutStatus } from '../../reducers/reducer';\nimport Api from '../../store/store';\nimport { HttpRequestStatus, ListType } from '../../utils/enums';\nimport { TextInput } from '../inputs/text-input/text-input';\nimport { TextareaInput } from '../inputs/textarea-input/textarea-input';\nimport PreLoader from '../pre-loader/pre-loader';\nimport './kanban-card.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar CardMode;\n\n(function (CardMode) {\n  CardMode[\"VIEW\"] = \"VIEW\";\n  CardMode[\"EDIT\"] = \"EDIT\";\n})(CardMode || (CardMode = {}));\n\nclass KanbanCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderCardView = () => {\n      const {\n        card\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'card-header',\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: 'card-title',\n            children: card.titulo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'icons-container',\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: 'card-icon-op delete',\n              icon: faTrash,\n              onClick: () => this.handleDeletePressed()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: 'card-icon-op edit',\n              onClick: () => this.handleEditPressed(),\n              icon: faPen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'card-body',\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'text-container',\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: card.conteudo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'arrow-buttons-container',\n          children: [card.lista !== ListType.TO_DO && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: 'card-icon-op arrow left',\n            onClick: () => this.handleSwitchPressed('left'),\n            icon: faArrowLeft\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 45\n          }, this), card.lista !== ListType.DONE && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: 'card-icon-op arrow right',\n            onClick: () => this.handleSwitchPressed('right'),\n            icon: faArrowRight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.handleDeletePressed = () => {\n      const entity = clone(this.props.card);\n      Api.deleteCard(entity.id);\n    };\n\n    this.handleEditPressed = () => {\n      const cardElement = document.getElementById(this.props.card.id);\n      this.setState({\n        mode: CardMode.EDIT,\n        temporaryCard: cloneDeep(this.props.card),\n        cardHeight: get(cardElement, 'clientHeight')\n      });\n    };\n\n    this.handleSwitchPressed = key => {\n      const card = cloneDeep(this.props.card);\n      const listOfTypes = Object.values(ListType);\n      const index = listOfTypes.findIndex(it => it === card.lista);\n      card.lista = listOfTypes[key === 'left' ? index - 1 : index + 1];\n      Api.changeCardList(card);\n    };\n\n    this.renderCardEdit = () => {\n      const {\n        temporaryCard\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'card-header',\n          children: [/*#__PURE__*/_jsxDEV(TextInput, {\n            value: temporaryCard.titulo,\n            onChange: event => this.setTemporaryCardValue(event.target.value, 'titulo')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'icons-container',\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: 'card-icon cancel',\n              onClick: () => this.cancelEdit(),\n              icon: faBan\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: 'card-icon confirm',\n              onClick: () => this.confirmEdit(),\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'card-body',\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'text-container',\n            children: /*#__PURE__*/_jsxDEV(TextareaInput, {\n              value: temporaryCard.conteudo,\n              onChange: event => this.setTemporaryCardValue(event.target.value, 'conteudo')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.setTemporaryCardValue = (value, key) => {\n      this.setState(prevState => ({\n        temporaryCard: { ...prevState.temporaryCard,\n          [key]: value\n        }\n      }));\n    };\n\n    this.cancelEdit = () => {\n      this.setState({\n        mode: CardMode.VIEW,\n        cardHeight: undefined\n      });\n    };\n\n    this.confirmEdit = () => {\n      const entity = this.state.temporaryCard;\n      Api.putCard(entity);\n    };\n\n    this.renderPreLoader = () => /*#__PURE__*/_jsxDEV(PreLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 27\n    }, this);\n\n    this.state = {\n      temporaryCard: this.props.card,\n      mode: CardMode.VIEW\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    const uuid = this.props.card.id;\n\n    if (get(newProps, `putResponse.${this.props.card.id}`) === HttpRequestStatus.SUCCESS) {\n      this.setState({\n        mode: CardMode.VIEW\n      }, () => this.props.updatePutStatus(HttpRequestStatus.NOOP, uuid));\n    }\n  }\n\n  render() {\n    const {\n      card,\n      deleteResponse,\n      putResponse\n    } = this.props;\n    const {\n      mode,\n      cardHeight\n    } = this.state;\n    const renderController = {\n      VIEW: () => this.renderCardView(),\n      EDIT: () => this.renderCardEdit()\n    };\n    const deleteStatus = get(deleteResponse, `${card.id}`, HttpRequestStatus.NOOP);\n    const putStatus = get(putResponse, `${card.id}`, HttpRequestStatus.NOOP);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: card.id,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `kanban-card-container ${card.lista} ${mode}`,\n        style: cardHeight ? {\n          height: `${cardHeight}px`\n        } : {},\n        children: deleteStatus === HttpRequestStatus.ONGOING || putStatus === HttpRequestStatus.ONGOING ? this.renderPreLoader() : renderController[mode]()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = storeState => ({\n  putResponse: storeState.putData,\n  deleteResponse: storeState.deleteData\n});\n\nconst mapDispatchToProps = {\n  updatePutStatus\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(KanbanCard);","map":{"version":3,"sources":["/Users/hiagodiniz/Desktop/LetsCode/desafio-tecnico-frontend/FRONT/my-app/src/components/kanban-card/kanban-card.tsx"],"names":["faArrowLeft","faArrowRight","faBan","faCheck","faPen","faTrash","FontAwesomeIcon","clone","cloneDeep","get","React","connect","updatePutStatus","Api","HttpRequestStatus","ListType","TextInput","TextareaInput","PreLoader","CardMode","KanbanCard","Component","constructor","props","renderCardView","card","titulo","handleDeletePressed","handleEditPressed","conteudo","lista","TO_DO","handleSwitchPressed","DONE","entity","deleteCard","id","cardElement","document","getElementById","setState","mode","EDIT","temporaryCard","cardHeight","key","listOfTypes","Object","values","index","findIndex","it","changeCardList","renderCardEdit","state","event","setTemporaryCardValue","target","value","cancelEdit","confirmEdit","prevState","VIEW","undefined","putCard","renderPreLoader","componentWillReceiveProps","newProps","uuid","SUCCESS","NOOP","render","deleteResponse","putResponse","renderController","deleteStatus","putStatus","height","ONGOING","mapStateToProps","storeState","putData","deleteData","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { faArrowLeft, faArrowRight, faBan, faCheck, faPen, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { clone, cloneDeep, get } from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { IReducerState, updatePutStatus } from '../../reducers/reducer';\nimport Api from '../../store/store';\nimport { HttpRequestStatus, ListType } from '../../utils/enums';\nimport { ICard } from '../../utils/interfaces';\nimport { TextInput } from '../inputs/text-input/text-input';\nimport { TextareaInput } from '../inputs/textarea-input/textarea-input';\nimport PreLoader from '../pre-loader/pre-loader';\nimport './kanban-card.scss';\n\ninterface IKanbanCardProps extends StateProps, DispatchProps {\n  card: ICard;\n}\n\ninterface IKanbanCardState {\n  temporaryCard: ICard;\n  mode: CardMode;\n  cardHeight?: number;\n}\n\nenum CardMode {\n  VIEW = 'VIEW',\n  EDIT = 'EDIT'\n}\n\nclass KanbanCard extends React.Component<IKanbanCardProps, IKanbanCardState>  {\n  constructor(props: IKanbanCardProps) {\n    super(props);\n\n    this.state = {\n      temporaryCard: this.props.card,\n      mode: CardMode.VIEW\n    };\n  }\n\n  componentWillReceiveProps(newProps: IKanbanCardProps) {\n    const uuid = this.props.card.id;\n\n    if (get(newProps, `putResponse.${this.props.card.id}`) === HttpRequestStatus.SUCCESS) {\n      this.setState({\n        mode: CardMode.VIEW\n      }, () => this.props.updatePutStatus(HttpRequestStatus.NOOP, uuid));\n    }\n  }\n\n  renderCardView = () => {\n    const { card } = this.props;\n\n    return (\n      <>\n        <div className={'card-header'}>\n          <h3 className={'card-title'}>{card.titulo}</h3>\n          <div className={'icons-container'}>\n            <FontAwesomeIcon className={'card-icon-op delete'} icon={faTrash} onClick={() => this.handleDeletePressed()} />\n            <FontAwesomeIcon className={'card-icon-op edit'} onClick={() => this.handleEditPressed()} icon={faPen} />\n          </div>\n        </div>\n        <div className={'card-body'}>\n          <div className={'text-container'}>\n            <p>{card.conteudo}</p>\n          </div>\n        </div>\n        <div className={'arrow-buttons-container'}>\n          {card.lista !== ListType.TO_DO && <FontAwesomeIcon className={'card-icon-op arrow left'} onClick={() => this.handleSwitchPressed('left')} icon={faArrowLeft} />}\n          {card.lista !== ListType.DONE && <FontAwesomeIcon className={'card-icon-op arrow right'} onClick={() => this.handleSwitchPressed('right')} icon={faArrowRight} />}\n        </div>\n      </>\n    );\n  };\n\n  handleDeletePressed = () => {\n    const entity = clone(this.props.card);\n    Api.deleteCard(entity.id);\n  };\n\n  handleEditPressed = () => {\n    const cardElement = document.getElementById(this.props.card.id);\n    this.setState({\n      mode: CardMode.EDIT,\n      temporaryCard: cloneDeep(this.props.card),\n      cardHeight: get(cardElement, 'clientHeight')\n    });\n  };\n\n  handleSwitchPressed = (key: 'left' | 'right') => {\n    const card = cloneDeep(this.props.card);\n    const listOfTypes = Object.values(ListType);\n    const index = listOfTypes.findIndex(it => it === card.lista);\n    card.lista = listOfTypes[key === 'left' ? index - 1 : index + 1];\n    Api.changeCardList(card);\n  };\n\n  renderCardEdit = () => {\n    const { temporaryCard } = this.state;\n\n    return (\n      <>\n        <div className={'card-header'}>\n          <TextInput\n            value={temporaryCard.titulo}\n            onChange={event => this.setTemporaryCardValue(event.target.value, 'titulo')}\n          />\n          <div className={'icons-container'}>\n            <FontAwesomeIcon className={'card-icon cancel'} onClick={() => this.cancelEdit()} icon={faBan} />\n            <FontAwesomeIcon className={'card-icon confirm'} onClick={() => this.confirmEdit()} icon={faCheck} />\n          </div>\n        </div>\n        <div className={'card-body'}>\n          <div className={'text-container'}>\n            <TextareaInput\n              value={temporaryCard.conteudo}\n              onChange={event => this.setTemporaryCardValue(event.target.value, 'conteudo')}\n            />\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  setTemporaryCardValue = (value: string, key: string) => {\n    this.setState(prevState => ({\n      temporaryCard: {\n        ...prevState.temporaryCard,\n        [key]: value\n      }\n    }));\n  };\n\n  cancelEdit = () => {\n    this.setState({\n      mode: CardMode.VIEW,\n      cardHeight: undefined\n    });\n  };\n\n  confirmEdit = () => {\n    const entity = this.state.temporaryCard;\n    Api.putCard(entity);\n  };\n\n  renderPreLoader = () => <PreLoader/>\n\n  render() {\n    const { card, deleteResponse, putResponse } = this.props;\n    const { mode, cardHeight } = this.state;\n    const renderController = {\n      VIEW: () => this.renderCardView(),\n      EDIT: () => this.renderCardEdit()\n    };\n    const deleteStatus = get(deleteResponse, `${card.id}`, HttpRequestStatus.NOOP);\n    const putStatus = get(putResponse, `${card.id}`, HttpRequestStatus.NOOP);\n\n    return (\n      <div id={card.id}>\n        <div className={`kanban-card-container ${card.lista} ${mode}`} style={ cardHeight ? { height: `${cardHeight}px` } : {} }>\n          {(deleteStatus === HttpRequestStatus.ONGOING || putStatus === HttpRequestStatus.ONGOING) ? this.renderPreLoader() : renderController[mode]()}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (storeState: IReducerState) => ({\n  putResponse: storeState.putData,\n  deleteResponse: storeState.deleteData\n});\n\nconst mapDispatchToProps = {\n  updatePutStatus\n}\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\n\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KanbanCard);\n"]},"metadata":{},"sourceType":"module"}