{"ast":null,"code":"import axios from \"axios\";\nimport { get } from \"lodash\";\nimport { HttpRequestStatus } from \"../utils/enums\";\nimport { API_PREFIX, getRequestConfig } from \"../utils/utils\";\nimport { updateCards, updateGetStatus } from './reducer';\nexport const getCards = () => {\n  updateGetStatus(HttpRequestStatus.ONGOING);\n  const promise = axios.get(`${API_PREFIX}/cards/`, getRequestConfig());\n  promise.then(response => {\n    updateGetStatus(HttpRequestStatus.SUCCESS);\n    formatCards(response.data);\n  });\n};\n\nconst formatCards = cards => {\n  const separatedList = {\n    ToDo: [],\n    Doing: [],\n    Done: []\n  };\n  cards.forEach(it => {\n    separatedList[get(it, 'lista', '')].push(it);\n  });\n  updateCards(separatedList);\n};","map":{"version":3,"sources":["/Users/hiagodiniz/Desktop/LetsCode/desafio-tecnico-frontend/FRONT/my-app/src/reducers/api-actions.ts"],"names":["axios","get","HttpRequestStatus","API_PREFIX","getRequestConfig","updateCards","updateGetStatus","getCards","ONGOING","promise","then","response","SUCCESS","formatCards","data","cards","separatedList","ToDo","Doing","Done","forEach","it","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AAEA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,gBAA7C;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,WAA7C;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5BD,EAAAA,eAAe,CAACJ,iBAAiB,CAACM,OAAnB,CAAf;AACA,QAAMC,OAAO,GAAGT,KAAK,CAACC,GAAN,CAAW,GAAEE,UAAW,SAAxB,EAAkCC,gBAAgB,EAAlD,CAAhB;AACAK,EAAAA,OAAO,CAACC,IAAR,CAAaC,QAAQ,IAAI;AACvBL,IAAAA,eAAe,CAACJ,iBAAiB,CAACU,OAAnB,CAAf;AACAC,IAAAA,WAAW,CAACF,QAAQ,CAACG,IAAV,CAAX;AACD,GAHD;AAID,CAPM;;AASP,MAAMD,WAAW,GAAIE,KAAD,IAAoB;AACtC,QAAMC,aAAkB,GAAG;AACzBC,IAAAA,IAAI,EAAE,EADmB;AAEzBC,IAAAA,KAAK,EAAE,EAFkB;AAGzBC,IAAAA,IAAI,EAAE;AAHmB,GAA3B;AAMAJ,EAAAA,KAAK,CAACK,OAAN,CAAcC,EAAE,IAAI;AAClBL,IAAAA,aAAa,CAACf,GAAG,CAACoB,EAAD,EAAK,OAAL,EAAc,EAAd,CAAJ,CAAb,CAAoCC,IAApC,CAAyCD,EAAzC;AACD,GAFD;AAIAhB,EAAAA,WAAW,CAACW,aAAD,CAAX;AACD,CAZD","sourcesContent":["import axios from \"axios\";\nimport { get } from \"lodash\";\nimport { HttpRequestStatus } from \"../utils/enums\";\nimport { ICard } from \"../utils/interfaces\";\nimport { API_PREFIX, getRequestConfig } from \"../utils/utils\";\nimport { updateCards, updateGetStatus } from './reducer';\n\nexport const getCards = () => {\n  updateGetStatus(HttpRequestStatus.ONGOING);\n  const promise = axios.get(`${API_PREFIX}/cards/`, getRequestConfig());\n  promise.then(response => {\n    updateGetStatus(HttpRequestStatus.SUCCESS);\n    formatCards(response.data);\n  });\n};\n\nconst formatCards = (cards: ICard[]) => {\n  const separatedList: any = {\n    ToDo: [],\n    Doing: [],\n    Done: []\n  };\n\n  cards.forEach(it => {\n    separatedList[get(it, 'lista', '')].push(it);\n  });\n\n  updateCards(separatedList)\n};"]},"metadata":{},"sourceType":"module"}