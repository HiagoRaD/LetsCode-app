{"ast":null,"code":"var _jsxFileName = \"/Users/hiagodiniz/Desktop/LetsCode/desafio-tecnico-frontend/FRONT/my-app/src/components/kanban/kanban.tsx\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { getCards } from \"../../reducers/api-actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nclass Kanban extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.test = () => {\n      const lista = [{\n        titulo: 'Título 1',\n        conteudo: 'Mussum Ipsum, cacilds vidis litro abertis. Mauris nec dolor in eros commodo tempor.',\n        lista: 'Doing'\n      }, {\n        titulo: 'Título 2',\n        conteudo: 'Mussum Ipsum, cacilds vidis litro abertis. Mauris nec dolor in eros commodo tempor.',\n        lista: 'Doing'\n      }, {\n        titulo: 'Título 3',\n        conteudo: 'Mussum Ipsum, cacilds vidis litro abertis. Mauris nec dolor in eros commodo tempor.',\n        lista: 'Done'\n      }, {\n        titulo: 'Título 4',\n        conteudo: 'Mussum Ipsum, cacilds vidis litro abertis. Mauris nec dolor in eros commodo tempor.',\n        lista: 'ToDo'\n      }];\n    };\n  }\n\n  componentDidMount() {\n    getCards();\n  }\n\n  render() {\n    console.log(this.props.store);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'kanban-container',\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.test(),\n        children: \"vai\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = storeState => ({\n  store: storeState\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Kanban);","map":{"version":3,"sources":["/Users/hiagodiniz/Desktop/LetsCode/desafio-tecnico-frontend/FRONT/my-app/src/components/kanban/kanban.tsx"],"names":["React","connect","getCards","Kanban","Component","test","lista","titulo","conteudo","componentDidMount","render","console","log","props","store","mapStateToProps","storeState","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,4BAAzB;;AAI2D;;AAE3D,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAuD;AAAA;AAAA;;AAAA,SAKrDC,IALqD,GAK9C,MAAM;AACX,YAAMC,KAAc,GAAG,CACrB;AACEC,QAAAA,MAAM,EAAE,UADV;AAEEC,QAAAA,QAAQ,EAAE,qFAFZ;AAGEF,QAAAA,KAAK,EAAE;AAHT,OADqB,EAMrB;AACEC,QAAAA,MAAM,EAAG,UADX;AAEEC,QAAAA,QAAQ,EAAE,qFAFZ;AAGEF,QAAAA,KAAK,EAAE;AAHT,OANqB,EAWrB;AACEC,QAAAA,MAAM,EAAG,UADX;AAEEC,QAAAA,QAAQ,EAAE,qFAFZ;AAGEF,QAAAA,KAAK,EAAE;AAHT,OAXqB,EAgBrB;AACEC,QAAAA,MAAM,EAAG,UADX;AAEEC,QAAAA,QAAQ,EAAE,qFAFZ;AAGEF,QAAAA,KAAK,EAAE;AAHT,OAhBqB,CAAvB;AAsBD,KA5BoD;AAAA;;AACrDG,EAAAA,iBAAiB,GAAG;AAClBP,IAAAA,QAAQ;AACT;;AA2BDQ,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAvB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAE,kBAAhB;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKT,IAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAtCoD;;AAyCvD,MAAMU,eAAe,GAAIC,UAAD,KAAgC;AACtDF,EAAAA,KAAK,EAAEE;AAD+C,CAAhC,CAAxB;;AAIA,MAAMC,kBAAkB,GAAG,EAA3B;AAMA,eAAehB,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,MAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport { getCards } from \"../../reducers/api-actions\";\nimport { IReducerState } from \"../../reducers/reducer\";\nimport { ICard } from \"../../utils/interfaces\";\n\ninterface IKanbanProps extends StateProps, DispatchProps {};\n\nclass Kanban extends React.Component<IKanbanProps, {}> {\n  componentDidMount() {\n    getCards();\n  }\n\n  test = () => {\n    const lista: ICard[] = [\n      {\n        titulo: 'Título 1', \n        conteudo: 'Mussum Ipsum, cacilds vidis litro abertis. Mauris nec dolor in eros commodo tempor.', \n        lista: 'Doing'\n      },\n      {\n        titulo : 'Título 2', \n        conteudo: 'Mussum Ipsum, cacilds vidis litro abertis. Mauris nec dolor in eros commodo tempor.', \n        lista: 'Doing'\n      },\n      {\n        titulo : 'Título 3', \n        conteudo: 'Mussum Ipsum, cacilds vidis litro abertis. Mauris nec dolor in eros commodo tempor.', \n        lista: 'Done'\n      },\n      {\n        titulo : 'Título 4', \n        conteudo: 'Mussum Ipsum, cacilds vidis litro abertis. Mauris nec dolor in eros commodo tempor.', \n        lista: 'ToDo'\n      }\n    ];\n  };\n\n  render() {\n    console.log(this.props.store);\n\n    return (\n      <div className={'kanban-container'}>\n        <button onClick={() => this.test()}>vai</button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (storeState: IReducerState) => ({\n  store: storeState\n});\n\nconst mapDispatchToProps = {};\n\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Kanban);\n"]},"metadata":{},"sourceType":"module"}