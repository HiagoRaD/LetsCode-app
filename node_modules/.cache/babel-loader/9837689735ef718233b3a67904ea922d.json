{"ast":null,"code":"var _jsxFileName = \"/Users/hiagodiniz/Desktop/LetsCode/desafio-tecnico-frontend/FRONT/my-app/src/App.tsx\";\nimport { Provider } from 'react-redux';\nimport './App.scss';\nimport Kanban from './components/kanban/kanban';\nimport login from './store/login';\nimport initStore from './store/store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = initStore(); // if (localStorage.getItem('jwtToken') == null) {\n\nlogin(store); // } else {\n//   const promise = axios.get(API_PREFIX + 'cards', getRequestConfig());\n//   promise.then(request => console.log(request.data));\n// }\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(Kanban, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hiagodiniz/Desktop/LetsCode/desafio-tecnico-frontend/FRONT/my-app/src/App.tsx"],"names":["Provider","Kanban","login","initStore","store","App"],"mappings":";AACA,SAASA,QAAT,QAAyB,aAAzB;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,eAAtB;;AAGA,MAAMC,KAAK,GAAGD,SAAS,EAAvB,C,CAEA;;AACED,KAAK,CAACE,KAAD,CAAL,C,CACF;AACA;AACA;AACA;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAED,KAAjB;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KARQC,G;AAUT,eAAeA,GAAf","sourcesContent":["import axios from 'axios';\nimport { Provider } from 'react-redux';\nimport './App.scss';\nimport Kanban from './components/kanban/kanban';\nimport login from './store/login';\nimport initStore from './store/store';\nimport { API_PREFIX, getRequestConfig } from './utils/utils';\n\nconst store = initStore();\n\n// if (localStorage.getItem('jwtToken') == null) {\n  login(store);\n// } else {\n//   const promise = axios.get(API_PREFIX + 'cards', getRequestConfig());\n//   promise.then(request => console.log(request.data));\n// }\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Kanban/>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}