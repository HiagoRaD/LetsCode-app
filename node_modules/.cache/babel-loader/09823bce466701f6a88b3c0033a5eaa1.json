{"ast":null,"code":"var _jsxFileName = \"/Users/hiagodiniz/Desktop/LetsCode/desafio-tecnico-frontend/FRONT/my-app/src/App.tsx\";\nimport axios from 'axios';\nimport { get } from 'lodash';\nimport { Provider } from 'react-redux';\nimport './App.scss';\nimport Kanban from './components/kanban/kanban';\nimport PreLoader from './components/pre-loader/pre-loader';\nimport { updateCards, updateGetStatus } from './reducers/reducer';\nimport login from './store/login';\nimport initStore from './store/store';\nimport { HttpRequestStatus } from './utils/enums';\nimport { API_PREFIX, getRequestConfig } from './utils/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = initStore(); // if (localStorage.getItem('jwtToken') == null) {\n\nconst response = login(store); // }\n\nexport const getCards = () => {\n  alert('get cards');\n  store.dispatch(updateGetStatus(HttpRequestStatus.ONGOING));\n  const promise = axios.get(`${API_PREFIX}/cards/`, getRequestConfig());\n  promise.then(response => {\n    store.dispatch(updateGetStatus(HttpRequestStatus.SUCCESS));\n    const separatedList = {\n      ToDo: [],\n      Doing: [],\n      Done: []\n    };\n    response.data.forEach(it => {\n      separatedList[get(it, 'lista', '')].push(it);\n    });\n    store.dispatch(updateCards(separatedList));\n  });\n  return null;\n};\n\nfunction App() {\n  if (localStorage.getItem('jwtToken') == null) return /*#__PURE__*/_jsxDEV(PreLoader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 56\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(Kanban, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hiagodiniz/Desktop/LetsCode/desafio-tecnico-frontend/FRONT/my-app/src/App.tsx"],"names":["axios","get","Provider","Kanban","PreLoader","updateCards","updateGetStatus","login","initStore","HttpRequestStatus","API_PREFIX","getRequestConfig","store","response","getCards","alert","dispatch","ONGOING","promise","then","SUCCESS","separatedList","ToDo","Doing","Done","data","forEach","it","push","App","localStorage","getItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,oBAA7C;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,eAA7C;;AAEA,MAAMC,KAAK,GAAGJ,SAAS,EAAvB,C,CAEA;;AACE,MAAMK,QAAQ,GAAGN,KAAK,CAACK,KAAD,CAAtB,C,CACF;;AAEA,OAAO,MAAME,QAAQ,GAAG,MAAM;AAC5BC,EAAAA,KAAK,CAAC,WAAD,CAAL;AACAH,EAAAA,KAAK,CAACI,QAAN,CAAeV,eAAe,CAACG,iBAAiB,CAACQ,OAAnB,CAA9B;AACA,QAAMC,OAAO,GAAGlB,KAAK,CAACC,GAAN,CAAW,GAAES,UAAW,SAAxB,EAAkCC,gBAAgB,EAAlD,CAAhB;AACAO,EAAAA,OAAO,CAACC,IAAR,CAAaN,QAAQ,IAAI;AACvBD,IAAAA,KAAK,CAACI,QAAN,CAAeV,eAAe,CAACG,iBAAiB,CAACW,OAAnB,CAA9B;AACA,UAAMC,aAAkB,GAAG;AACzBC,MAAAA,IAAI,EAAE,EADmB;AAEzBC,MAAAA,KAAK,EAAE,EAFkB;AAGzBC,MAAAA,IAAI,EAAE;AAHmB,KAA3B;AAMAX,IAAAA,QAAQ,CAACY,IAAT,CAAcC,OAAd,CAAuBC,EAAD,IAAa;AACjCN,MAAAA,aAAa,CAACpB,GAAG,CAAC0B,EAAD,EAAK,OAAL,EAAc,EAAd,CAAJ,CAAb,CAAoCC,IAApC,CAAyCD,EAAzC;AACD,KAFD;AAIAf,IAAAA,KAAK,CAACI,QAAN,CAAeX,WAAW,CAACgB,aAAD,CAA1B;AACD,GAbD;AAcA,SAAO,IAAP;AACD,CAnBM;;AAsBP,SAASQ,GAAT,GAAe;AACb,MAAIC,YAAY,CAACC,OAAb,CAAqB,UAArB,KAAoC,IAAxC,EAA8C,oBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAE9C,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEnB,KAAjB;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KAVQiB,G;AAYT,eAAeA,GAAf","sourcesContent":["import axios from 'axios';\nimport { get } from 'lodash';\nimport { Provider } from 'react-redux';\nimport './App.scss';\nimport Kanban from './components/kanban/kanban';\nimport PreLoader from './components/pre-loader/pre-loader';\nimport { updateCards, updateGetStatus } from './reducers/reducer';\nimport login from './store/login';\nimport initStore from './store/store';\nimport { HttpRequestStatus } from './utils/enums';\nimport { API_PREFIX, getRequestConfig } from './utils/utils';\n\nconst store = initStore();\n\n// if (localStorage.getItem('jwtToken') == null) {\n  const response = login(store);\n// }\n\nexport const getCards = () => {\n  alert('get cards');\n  store.dispatch(updateGetStatus(HttpRequestStatus.ONGOING));\n  const promise = axios.get(`${API_PREFIX}/cards/`, getRequestConfig());\n  promise.then(response => {\n    store.dispatch(updateGetStatus(HttpRequestStatus.SUCCESS));\n    const separatedList: any = {\n      ToDo: [],\n      Doing: [],\n      Done: []\n    };\n\n    response.data.forEach((it: any) => {\n      separatedList[get(it, 'lista', '')].push(it);\n    });\n\n    store.dispatch(updateCards(separatedList))\n  });\n  return null;\n};\n\n\nfunction App() {\n  if (localStorage.getItem('jwtToken') == null) return <PreLoader/>\n\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Kanban/>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}