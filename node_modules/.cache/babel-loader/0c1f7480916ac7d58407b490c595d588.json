{"ast":null,"code":"export const ACTION_TYPES = {\n  UPDATE_GET_STATUS: 'UPDATE_GET_STATUS',\n  UPDATE_GET_DATA: 'UPDATE_GET_DATA',\n  UPDATE_PUT_STATUS: 'UPDATE_PUT_STATUS',\n  UPDATE_PUT_DATA: 'UPDATE_PUT_DATA',\n  UPDATE_POST_STATUS: 'UPDATE_POST_STATUS',\n  UPDATE_POST_DATA: 'UPDATE_POST_DATA',\n  UPDATE_DELETE_STATUS: 'UPDATE_DELETE_STATUS',\n  UPDATE_DELETE_DATA: 'UPDATE_DELETE_DATA',\n  UPDATE_TOKEN: 'UPDATE_TOKEN',\n  UPDATE_CARDS: 'UPDATE_CARDS'\n};\nconst initialState = {\n  cards: {\n    'ToDo': [],\n    'Doing': [],\n    'Done': []\n  },\n  getData: {},\n  putData: {},\n  postData: {},\n  deleteData: {},\n  jwtToken: ''\n};\n\nconst appReducer = (state = initialState, action) => {\n  console.log('action', action);\n\n  switch (action.type) {\n    case ACTION_TYPES.UPDATE_CARDS:\n      return { ...state,\n        cards: action.payload.data\n      };\n\n    case ACTION_TYPES.UPDATE_GET_STATUS:\n      return { ...state,\n        getData: { ...state.getData,\n          status: action.payload.status\n        }\n      };\n\n    case ACTION_TYPES.UPDATE_GET_DATA:\n      return { ...state,\n        getData: { ...state.getData,\n          data: action.payload.data\n        }\n      };\n\n    case ACTION_TYPES.UPDATE_PUT_STATUS:\n      return { ...state\n      };\n\n    case ACTION_TYPES.UPDATE_POST_STATUS:\n      return { ...state\n      };\n\n    case ACTION_TYPES.UPDATE_DELETE_STATUS:\n      return { ...state\n      };\n\n    case ACTION_TYPES.UPDATE_TOKEN:\n      return { ...state,\n        jwtToken: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\nexport const updateJwtToken = newToken => ({\n  type: ACTION_TYPES.UPDATE_TOKEN,\n  payload: newToken\n});\nexport const updateCards = cardsList => ({\n  type: ACTION_TYPES.UPDATE_CARDS,\n  payload: {\n    data: cardsList\n  }\n});\nexport const updateGetStatus = status => ({\n  type: ACTION_TYPES.UPDATE_GET_STATUS,\n  payload: {\n    status\n  }\n});\nexport const updateGetData = cards => ({\n  type: ACTION_TYPES.UPDATE_GET_STATUS,\n  payload: {\n    data: cards\n  }\n});\nexport const updatePutStatus = (status, uuid) => ({\n  type: ACTION_TYPES.UPDATE_PUT_STATUS,\n  payload: {\n    status\n  },\n  meta: {\n    key: uuid\n  }\n});\nexport const updatePostStatus = status => ({\n  type: ACTION_TYPES.UPDATE_POST_STATUS,\n  payload: {\n    status\n  }\n});\nexport const updateDeleteStatus = status => ({\n  type: ACTION_TYPES.UPDATE_DELETE_STATUS,\n  payload: {\n    status\n  }\n});\nexport const putCard = card => {};\nexport const postCard = card => {};\nexport const deleteCard = id => {};","map":{"version":3,"sources":["/Users/hiagodiniz/Desktop/LetsCode/desafio-tecnico-frontend/FRONT/my-app/src/reducers/reducer.ts"],"names":["ACTION_TYPES","UPDATE_GET_STATUS","UPDATE_GET_DATA","UPDATE_PUT_STATUS","UPDATE_PUT_DATA","UPDATE_POST_STATUS","UPDATE_POST_DATA","UPDATE_DELETE_STATUS","UPDATE_DELETE_DATA","UPDATE_TOKEN","UPDATE_CARDS","initialState","cards","getData","putData","postData","deleteData","jwtToken","appReducer","state","action","console","log","type","payload","data","status","updateJwtToken","newToken","updateCards","cardsList","updateGetStatus","updateGetData","updatePutStatus","uuid","meta","key","updatePostStatus","updateDeleteStatus","putCard","card","postCard","deleteCard","id"],"mappings":"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","sourcesContent":["import { HttpRequestStatus } from '../utils/enums';\nimport { IAction, ICard, ICardsList, IReducerListObjects, IRequestData } from '../utils/interfaces';\n\nexport const ACTION_TYPES = {\n  UPDATE_GET_STATUS: 'UPDATE_GET_STATUS',\n  UPDATE_GET_DATA: 'UPDATE_GET_DATA',\n  \n  UPDATE_PUT_STATUS: 'UPDATE_PUT_STATUS',\n  UPDATE_PUT_DATA: 'UPDATE_PUT_DATA',\n  \n  UPDATE_POST_STATUS: 'UPDATE_POST_STATUS',\n  UPDATE_POST_DATA: 'UPDATE_POST_DATA',\n  \n  UPDATE_DELETE_STATUS: 'UPDATE_DELETE_STATUS',\n  UPDATE_DELETE_DATA: 'UPDATE_DELETE_DATA',\n\n  UPDATE_TOKEN: 'UPDATE_TOKEN',\n\n  UPDATE_CARDS: 'UPDATE_CARDS'\n};\n\nexport interface IReducerState {\n  cards: ICardsList;\n  getData: IRequestData<ICard[]>\n  putData: IReducerListObjects<ICard>\n  postData: IReducerListObjects<ICard>\n  deleteData: IRequestData<any>\n  jwtToken: string;\n}\n\nconst initialState: IReducerState = {\n  cards: {\n    'ToDo': [],\n    'Doing': [],\n    'Done': []\n  },\n  getData: {},\n  putData: {},\n  postData: {},\n  deleteData: {},\n  jwtToken: ''\n};\n\nconst appReducer = (state: IReducerState = initialState, action: IAction): IReducerState => {\n  console.log('action', action);\n  switch (action.type) {\n    case ACTION_TYPES.UPDATE_CARDS:\n      return {\n        ...state,\n        cards: action.payload.data\n      }; \n    case ACTION_TYPES.UPDATE_GET_STATUS:\n      return {\n        ...state,\n        getData: {\n          ...state.getData,\n          status: action.payload.status\n        }\n      };\n    case ACTION_TYPES.UPDATE_GET_DATA:\n      return {\n        ...state,\n        getData: {\n          ...state.getData,\n          data: action.payload.data\n        }\n      };\n    case ACTION_TYPES.UPDATE_PUT_STATUS:\n      return {\n        ...state\n      };\n    case ACTION_TYPES.UPDATE_POST_STATUS:\n      return {\n        ...state\n      };\n    case ACTION_TYPES.UPDATE_DELETE_STATUS:\n      return {\n        ...state\n      };\n    case ACTION_TYPES.UPDATE_TOKEN:\n      return {\n        ...state,\n        jwtToken: action.payload\n      }\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\n\nexport const updateJwtToken = (newToken: string) => ({\n  type: ACTION_TYPES.UPDATE_TOKEN,\n  payload: newToken\n});\n\nexport const updateCards = (cardsList: ICardsList) => ({\n  type: ACTION_TYPES.UPDATE_CARDS,\n  payload: { data: cardsList }\n});\n\nexport const updateGetStatus = (status: HttpRequestStatus) => ({\n  type: ACTION_TYPES.UPDATE_GET_STATUS,\n  payload: { status }\n});\n\nexport const updateGetData = (cards: ICard[]) => ({\n  type: ACTION_TYPES.UPDATE_GET_STATUS,\n  payload: { data: cards }\n});\n\nexport const updatePutStatus = (status: HttpRequestStatus, uuid: string) => ({\n  type: ACTION_TYPES.UPDATE_PUT_STATUS,\n  payload: { status },\n  meta: { key: uuid }\n});\n\nexport const updatePostStatus = (status: HttpRequestStatus) => ({\n  type: ACTION_TYPES.UPDATE_POST_STATUS,\n  payload: { status }\n});\n\nexport const updateDeleteStatus = (status: HttpRequestStatus) => ({\n  type: ACTION_TYPES.UPDATE_DELETE_STATUS,\n  payload: { status }\n});\n\nexport const putCard = (card: ICard) => {\n\n}; \n\nexport const postCard = (card: ICard) => {\n\n}; \n\nexport const deleteCard = (id: string) => {\n\n}; \n\n"]},"metadata":{},"sourceType":"module"}